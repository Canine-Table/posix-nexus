#nx_include "trig.d/nex-radian.bc"
#nx_include "trig.d/nex-trig.bc"
#nx_include "nex-real.bc"
#nx_include "nex-convert.bc"

##################################################################
define r_nx_tan(x) {
	return r_nx_ts_sin(x) / r_nx_ts_cos(x)
}

##################################################################
define r_nx_ts_cot(x) {
	return 1 / r_nx_tan(x)
}

##################################################################
define r_nx_tan_sec(x) {
	auto y
	y = r_nx_ts_tan(x)
	return 1 + y*y
}

##################################################################
define pr_nx_cot_csc(x) {
	auto a
	a = r_nx_ts_cot(x)
	return 1 + a*a
}

##################################################################

define r_nx_tan_id(a, b) {
	auto w, x, y, z
	if (nx_abs(1 - x * y) < c_epsilon || nx_abs(1 + x * y) < c_epsilon) {
		print "[IMPURITY]: tangent identity denominator breach"
		return -1
	}

	x = r_nx_tan(a)
	y = r_nx_tan(b)

	w = (x + y) / (1 + x * y)
	z = (x - y) / (1 - x * y)

	print "Sum tan(a+b): ", w, " → angle (deg): ", nx_rad2deg(r_nx_ts_atan(w)), "\n"
	print "Diff tan(a-b): ", z, " → angle (deg): ", nx_rad2deg(r_nx_ts_atan(z)), "\n"
}

##################################################################
define r_nx_ts_atan(z) {
	if (nx_abs(z) == 1)
		return (nx_sign(z) * c_pi) / 4
	if (nx_abs(z) > 0.999 && p < 256) {
		p = 256
	} else if (nx_abs(z) > 0.95 && p < 192) {
		p = 192
	} else if (nx_abs(z) > 0.9 && p < 160) {
		p = 160
	}
	if (z > 1)
		return c_pi / 2 - nx_ts_alt(1 / z, 3, c_prec, 2, -1)
	if (z < -1)
		return -c_pi / 2 - nx_ts_alt(1 / z, 3, c_prec, 2, -1)
	return nx_ts_alt(z, 3, c_prec, 2, -1)
}

##################################################################
define r_nx_atan2(y, x) {
	if (x > 0)
		return pr_nx_ts_atan(y / x)
	if (x < 0 && y >= 0)
		return pr_nx_ts_atan(y / x) + pi
	if (x < 0 && y < 0)
		return pr_nx_ts_atan(y / x) - pi
	if (x == 0 && y > 0)
		return c_pi / 2
	if (x == 0 && y < 0)
		return -c_pi / 2
	print "[IMPURITY]: x == 0 && y == 0 in atan2"
	return -1
}

##################################################################

