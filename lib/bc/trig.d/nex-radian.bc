
define nx_rad_cos(x) {
	auto r, i
	# π glyph
	i = nx_rj_pi(16)
	# wrap to [0, 2π)
	r = nx_mod2pi(x)
	# reflect across π/2 # if in Quadrants III or IV
	if (r > i)
		r = 2 * i - r
	# reflect across π 
	# if in Quadrant II
	if (r > i / 2)
		r = i - r
	# final range: [0, π/2] 
	return r
}

define nx_rad_sin(x) {
	auto r, i
	# π glyph
	i = nx_rj_pi(16)
	# wrap to [0, 2π)
	x = nx_mod2pi(x)
	r = 1
	if (x > i) {
		x = x - i
		r = -1
	}
	if (x > i / 2)
		x = i - x
	return x * r
}

